//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cliente.ServidorBuscaminasServicio {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Celda", Namespace="http://schemas.datacontract.org/2004/07/Contratos")]
    [System.SerializableAttribute()]
    public partial class Celda : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int columnaPosicionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool esMarcadaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool esMinadaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool esReveladaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int filaPosicionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int columnaPosicion {
            get {
                return this.columnaPosicionField;
            }
            set {
                if ((this.columnaPosicionField.Equals(value) != true)) {
                    this.columnaPosicionField = value;
                    this.RaisePropertyChanged("columnaPosicion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool esMarcada {
            get {
                return this.esMarcadaField;
            }
            set {
                if ((this.esMarcadaField.Equals(value) != true)) {
                    this.esMarcadaField = value;
                    this.RaisePropertyChanged("esMarcada");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool esMinada {
            get {
                return this.esMinadaField;
            }
            set {
                if ((this.esMinadaField.Equals(value) != true)) {
                    this.esMinadaField = value;
                    this.RaisePropertyChanged("esMinada");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool esRevelada {
            get {
                return this.esReveladaField;
            }
            set {
                if ((this.esReveladaField.Equals(value) != true)) {
                    this.esReveladaField = value;
                    this.RaisePropertyChanged("esRevelada");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int filaPosicion {
            get {
                return this.filaPosicionField;
            }
            set {
                if ((this.filaPosicionField.Equals(value) != true)) {
                    this.filaPosicionField = value;
                    this.RaisePropertyChanged("filaPosicion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sala", Namespace="http://schemas.datacontract.org/2004/07/Contratos")]
    [System.SerializableAttribute()]
    public partial class Sala : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string codigoSalaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, object> jugadoresChatCallbackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, object> jugadoresJuegoCallbackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, object> jugadoresSalaCallbackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cliente.ServidorBuscaminasServicio.Tablero tableroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int turnoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string codigoSala {
            get {
                return this.codigoSalaField;
            }
            set {
                if ((object.ReferenceEquals(this.codigoSalaField, value) != true)) {
                    this.codigoSalaField = value;
                    this.RaisePropertyChanged("codigoSala");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, object> jugadoresChatCallback {
            get {
                return this.jugadoresChatCallbackField;
            }
            set {
                if ((object.ReferenceEquals(this.jugadoresChatCallbackField, value) != true)) {
                    this.jugadoresChatCallbackField = value;
                    this.RaisePropertyChanged("jugadoresChatCallback");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, object> jugadoresJuegoCallback {
            get {
                return this.jugadoresJuegoCallbackField;
            }
            set {
                if ((object.ReferenceEquals(this.jugadoresJuegoCallbackField, value) != true)) {
                    this.jugadoresJuegoCallbackField = value;
                    this.RaisePropertyChanged("jugadoresJuegoCallback");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, object> jugadoresSalaCallback {
            get {
                return this.jugadoresSalaCallbackField;
            }
            set {
                if ((object.ReferenceEquals(this.jugadoresSalaCallbackField, value) != true)) {
                    this.jugadoresSalaCallbackField = value;
                    this.RaisePropertyChanged("jugadoresSalaCallback");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cliente.ServidorBuscaminasServicio.Tablero tablero {
            get {
                return this.tableroField;
            }
            set {
                if ((object.ReferenceEquals(this.tableroField, value) != true)) {
                    this.tableroField = value;
                    this.RaisePropertyChanged("tablero");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int turno {
            get {
                return this.turnoField;
            }
            set {
                if ((this.turnoField.Equals(value) != true)) {
                    this.turnoField = value;
                    this.RaisePropertyChanged("turno");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tablero", Namespace="http://schemas.datacontract.org/2004/07/Contratos")]
    [System.SerializableAttribute()]
    public partial class Tablero : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int altoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int anchoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cliente.ServidorBuscaminasServicio.Celda[] bombasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int numeroMinasField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int alto {
            get {
                return this.altoField;
            }
            set {
                if ((this.altoField.Equals(value) != true)) {
                    this.altoField = value;
                    this.RaisePropertyChanged("alto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ancho {
            get {
                return this.anchoField;
            }
            set {
                if ((this.anchoField.Equals(value) != true)) {
                    this.anchoField = value;
                    this.RaisePropertyChanged("ancho");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cliente.ServidorBuscaminasServicio.Celda[] bombas {
            get {
                return this.bombasField;
            }
            set {
                if ((object.ReferenceEquals(this.bombasField, value) != true)) {
                    this.bombasField = value;
                    this.RaisePropertyChanged("bombas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int numeroMinas {
            get {
                return this.numeroMinasField;
            }
            set {
                if ((this.numeroMinasField.Equals(value) != true)) {
                    this.numeroMinasField = value;
                    this.RaisePropertyChanged("numeroMinas");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorBuscaminasServicio.IChatServiceDuplex", CallbackContract=typeof(Cliente.ServidorBuscaminasServicio.IChatServiceDuplexCallback))]
    public interface IChatServiceDuplex {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatServiceDuplex/AgregarJugadorChatCallback")]
        void AgregarJugadorChatCallback(string codigoSala, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatServiceDuplex/AgregarJugadorChatCallback")]
        System.Threading.Tasks.Task AgregarJugadorChatCallbackAsync(string codigoSala, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatServiceDuplex/EnviarMensajeChat")]
        void EnviarMensajeChat(string codigoSala, string nombreUsuario, string mensaje);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatServiceDuplex/EnviarMensajeChat")]
        System.Threading.Tasks.Task EnviarMensajeChatAsync(string codigoSala, string nombreUsuario, string mensaje);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatServiceDuplexCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatServiceDuplex/RecibirMensaje", ReplyAction="http://tempuri.org/IChatServiceDuplex/RecibirMensajeResponse")]
        void RecibirMensaje(string nombreUsuarioEmisor, string mensaje);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatServiceDuplexChannel : Cliente.ServidorBuscaminasServicio.IChatServiceDuplex, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatServiceDuplexClient : System.ServiceModel.DuplexClientBase<Cliente.ServidorBuscaminasServicio.IChatServiceDuplex>, Cliente.ServidorBuscaminasServicio.IChatServiceDuplex {
        
        public ChatServiceDuplexClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ChatServiceDuplexClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ChatServiceDuplexClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatServiceDuplexClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatServiceDuplexClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void AgregarJugadorChatCallback(string codigoSala, string nombreUsuario) {
            base.Channel.AgregarJugadorChatCallback(codigoSala, nombreUsuario);
        }
        
        public System.Threading.Tasks.Task AgregarJugadorChatCallbackAsync(string codigoSala, string nombreUsuario) {
            return base.Channel.AgregarJugadorChatCallbackAsync(codigoSala, nombreUsuario);
        }
        
        public void EnviarMensajeChat(string codigoSala, string nombreUsuario, string mensaje) {
            base.Channel.EnviarMensajeChat(codigoSala, nombreUsuario, mensaje);
        }
        
        public System.Threading.Tasks.Task EnviarMensajeChatAsync(string codigoSala, string nombreUsuario, string mensaje) {
            return base.Channel.EnviarMensajeChatAsync(codigoSala, nombreUsuario, mensaje);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorBuscaminasServicio.ISalaServiceDuplex", CallbackContract=typeof(Cliente.ServidorBuscaminasServicio.ISalaServiceDuplexCallback))]
    public interface ISalaServiceDuplex {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISalaServiceDuplex/AgregarJugadorComoPrimerJugador")]
        void AgregarJugadorComoPrimerJugador(string codigoSala, string nombreUsario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISalaServiceDuplex/AgregarJugadorComoPrimerJugador")]
        System.Threading.Tasks.Task AgregarJugadorComoPrimerJugadorAsync(string codigoSala, string nombreUsario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISalaServiceDuplex/AgregarJugadorComoSegundoJugador")]
        void AgregarJugadorComoSegundoJugador(string codigoSala, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISalaServiceDuplex/AgregarJugadorComoSegundoJugador")]
        System.Threading.Tasks.Task AgregarJugadorComoSegundoJugadorAsync(string codigoSala, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISalaServiceDuplex/ColocarJugadoresEnElJuego")]
        void ColocarJugadoresEnElJuego(string codigoSala);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISalaServiceDuplex/ColocarJugadoresEnElJuego")]
        System.Threading.Tasks.Task ColocarJugadoresEnElJuegoAsync(string codigoSala);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISalaServiceDuplexCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaServiceDuplex/ActualizarNombresUsuario", ReplyAction="http://tempuri.org/ISalaServiceDuplex/ActualizarNombresUsuarioResponse")]
        void ActualizarNombresUsuario(string nombreUsuarioJugador1, string nombreUsuarioJugador2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaServiceDuplex/JugarMultigugador", ReplyAction="http://tempuri.org/ISalaServiceDuplex/JugarMultigugadorResponse")]
        void JugarMultigugador(string codigoSala);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISalaServiceDuplexChannel : Cliente.ServidorBuscaminasServicio.ISalaServiceDuplex, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SalaServiceDuplexClient : System.ServiceModel.DuplexClientBase<Cliente.ServidorBuscaminasServicio.ISalaServiceDuplex>, Cliente.ServidorBuscaminasServicio.ISalaServiceDuplex {
        
        public SalaServiceDuplexClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public SalaServiceDuplexClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public SalaServiceDuplexClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SalaServiceDuplexClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SalaServiceDuplexClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void AgregarJugadorComoPrimerJugador(string codigoSala, string nombreUsario) {
            base.Channel.AgregarJugadorComoPrimerJugador(codigoSala, nombreUsario);
        }
        
        public System.Threading.Tasks.Task AgregarJugadorComoPrimerJugadorAsync(string codigoSala, string nombreUsario) {
            return base.Channel.AgregarJugadorComoPrimerJugadorAsync(codigoSala, nombreUsario);
        }
        
        public void AgregarJugadorComoSegundoJugador(string codigoSala, string nombreUsuario) {
            base.Channel.AgregarJugadorComoSegundoJugador(codigoSala, nombreUsuario);
        }
        
        public System.Threading.Tasks.Task AgregarJugadorComoSegundoJugadorAsync(string codigoSala, string nombreUsuario) {
            return base.Channel.AgregarJugadorComoSegundoJugadorAsync(codigoSala, nombreUsuario);
        }
        
        public void ColocarJugadoresEnElJuego(string codigoSala) {
            base.Channel.ColocarJugadoresEnElJuego(codigoSala);
        }
        
        public System.Threading.Tasks.Task ColocarJugadoresEnElJuegoAsync(string codigoSala) {
            return base.Channel.ColocarJugadoresEnElJuegoAsync(codigoSala);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorBuscaminasServicio.IJuegoServiceDuplex", CallbackContract=typeof(Cliente.ServidorBuscaminasServicio.IJuegoServiceDuplexCallback))]
    public interface IJuegoServiceDuplex {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IJuegoServiceDuplex/AgregarJugadorJuegoCallback")]
        void AgregarJugadorJuegoCallback(string codigoSala, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IJuegoServiceDuplex/AgregarJugadorJuegoCallback")]
        System.Threading.Tasks.Task AgregarJugadorJuegoCallbackAsync(string codigoSala, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IJuegoServiceDuplex/PasarTurno")]
        void PasarTurno(string codigoSala, string nombreUsuarioClic, int turnoUsuarioClic, Cliente.ServidorBuscaminasServicio.Celda celda);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IJuegoServiceDuplex/PasarTurno")]
        System.Threading.Tasks.Task PasarTurnoAsync(string codigoSala, string nombreUsuarioClic, int turnoUsuarioClic, Cliente.ServidorBuscaminasServicio.Celda celda);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IJuegoServiceDuplex/EnviarConclusion")]
        void EnviarConclusion(string codigoSala, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IJuegoServiceDuplex/EnviarConclusion")]
        System.Threading.Tasks.Task EnviarConclusionAsync(string codigoSala, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IJuegoServiceDuplex/CrearNuevoTablero")]
        void CrearNuevoTablero(string codigoSala, int ancho, int alto, int numeroMinas);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IJuegoServiceDuplex/CrearNuevoTablero")]
        System.Threading.Tasks.Task CrearNuevoTableroAsync(string codigoSala, int ancho, int alto, int numeroMinas);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJuegoServiceDuplexCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IJuegoServiceDuplex/RecibirTurno")]
        void RecibirTurno(string nombreUsuarioClic, int turnoUsuarioClic, Cliente.ServidorBuscaminasServicio.Celda celda);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IJuegoServiceDuplex/RecibirConclusion")]
        void RecibirConclusion(string nombreUsuario);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJuegoServiceDuplexChannel : Cliente.ServidorBuscaminasServicio.IJuegoServiceDuplex, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JuegoServiceDuplexClient : System.ServiceModel.DuplexClientBase<Cliente.ServidorBuscaminasServicio.IJuegoServiceDuplex>, Cliente.ServidorBuscaminasServicio.IJuegoServiceDuplex {
        
        public JuegoServiceDuplexClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public JuegoServiceDuplexClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public JuegoServiceDuplexClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public JuegoServiceDuplexClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public JuegoServiceDuplexClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void AgregarJugadorJuegoCallback(string codigoSala, string nombreUsuario) {
            base.Channel.AgregarJugadorJuegoCallback(codigoSala, nombreUsuario);
        }
        
        public System.Threading.Tasks.Task AgregarJugadorJuegoCallbackAsync(string codigoSala, string nombreUsuario) {
            return base.Channel.AgregarJugadorJuegoCallbackAsync(codigoSala, nombreUsuario);
        }
        
        public void PasarTurno(string codigoSala, string nombreUsuarioClic, int turnoUsuarioClic, Cliente.ServidorBuscaminasServicio.Celda celda) {
            base.Channel.PasarTurno(codigoSala, nombreUsuarioClic, turnoUsuarioClic, celda);
        }
        
        public System.Threading.Tasks.Task PasarTurnoAsync(string codigoSala, string nombreUsuarioClic, int turnoUsuarioClic, Cliente.ServidorBuscaminasServicio.Celda celda) {
            return base.Channel.PasarTurnoAsync(codigoSala, nombreUsuarioClic, turnoUsuarioClic, celda);
        }
        
        public void EnviarConclusion(string codigoSala, string nombreUsuario) {
            base.Channel.EnviarConclusion(codigoSala, nombreUsuario);
        }
        
        public System.Threading.Tasks.Task EnviarConclusionAsync(string codigoSala, string nombreUsuario) {
            return base.Channel.EnviarConclusionAsync(codigoSala, nombreUsuario);
        }
        
        public void CrearNuevoTablero(string codigoSala, int ancho, int alto, int numeroMinas) {
            base.Channel.CrearNuevoTablero(codigoSala, ancho, alto, numeroMinas);
        }
        
        public System.Threading.Tasks.Task CrearNuevoTableroAsync(string codigoSala, int ancho, int alto, int numeroMinas) {
            return base.Channel.CrearNuevoTableroAsync(codigoSala, ancho, alto, numeroMinas);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorBuscaminasServicio.ISalaService")]
    public interface ISalaService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaService/CrearNuevaSala", ReplyAction="http://tempuri.org/ISalaService/CrearNuevaSalaResponse")]
        Cliente.ServidorBuscaminasServicio.Sala CrearNuevaSala();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaService/CrearNuevaSala", ReplyAction="http://tempuri.org/ISalaService/CrearNuevaSalaResponse")]
        System.Threading.Tasks.Task<Cliente.ServidorBuscaminasServicio.Sala> CrearNuevaSalaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaService/BuscarSala", ReplyAction="http://tempuri.org/ISalaService/BuscarSalaResponse")]
        Cliente.ServidorBuscaminasServicio.Sala BuscarSala(string codigoSala);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaService/BuscarSala", ReplyAction="http://tempuri.org/ISalaService/BuscarSalaResponse")]
        System.Threading.Tasks.Task<Cliente.ServidorBuscaminasServicio.Sala> BuscarSalaAsync(string codigoSala);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISalaServiceChannel : Cliente.ServidorBuscaminasServicio.ISalaService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SalaServiceClient : System.ServiceModel.ClientBase<Cliente.ServidorBuscaminasServicio.ISalaService>, Cliente.ServidorBuscaminasServicio.ISalaService {
        
        public SalaServiceClient() {
        }
        
        public SalaServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SalaServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalaServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalaServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Cliente.ServidorBuscaminasServicio.Sala CrearNuevaSala() {
            return base.Channel.CrearNuevaSala();
        }
        
        public System.Threading.Tasks.Task<Cliente.ServidorBuscaminasServicio.Sala> CrearNuevaSalaAsync() {
            return base.Channel.CrearNuevaSalaAsync();
        }
        
        public Cliente.ServidorBuscaminasServicio.Sala BuscarSala(string codigoSala) {
            return base.Channel.BuscarSala(codigoSala);
        }
        
        public System.Threading.Tasks.Task<Cliente.ServidorBuscaminasServicio.Sala> BuscarSalaAsync(string codigoSala) {
            return base.Channel.BuscarSalaAsync(codigoSala);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorBuscaminasServicio.IAmigosServiceMgt")]
    public interface IAmigosServiceMgt {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigosServiceMgt/ObtenerAmigosUsuario", ReplyAction="http://tempuri.org/IAmigosServiceMgt/ObtenerAmigosUsuarioResponse")]
        string[] ObtenerAmigosUsuario(int idJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigosServiceMgt/ObtenerAmigosUsuario", ReplyAction="http://tempuri.org/IAmigosServiceMgt/ObtenerAmigosUsuarioResponse")]
        System.Threading.Tasks.Task<string[]> ObtenerAmigosUsuarioAsync(int idJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigosServiceMgt/ObtenerEstadoAmigos", ReplyAction="http://tempuri.org/IAmigosServiceMgt/ObtenerEstadoAmigosResponse")]
        System.Tuple<string, string>[] ObtenerEstadoAmigos(int idJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigosServiceMgt/ObtenerEstadoAmigos", ReplyAction="http://tempuri.org/IAmigosServiceMgt/ObtenerEstadoAmigosResponse")]
        System.Threading.Tasks.Task<System.Tuple<string, string>[]> ObtenerEstadoAmigosAsync(int idJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigosServiceMgt/ObtenerSolicitudesUsuario", ReplyAction="http://tempuri.org/IAmigosServiceMgt/ObtenerSolicitudesUsuarioResponse")]
        string[] ObtenerSolicitudesUsuario(int idJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigosServiceMgt/ObtenerSolicitudesUsuario", ReplyAction="http://tempuri.org/IAmigosServiceMgt/ObtenerSolicitudesUsuarioResponse")]
        System.Threading.Tasks.Task<string[]> ObtenerSolicitudesUsuarioAsync(int idJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigosServiceMgt/EnviarSolicitud", ReplyAction="http://tempuri.org/IAmigosServiceMgt/EnviarSolicitudResponse")]
        bool EnviarSolicitud(int idSolicita, int idRecibe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigosServiceMgt/EnviarSolicitud", ReplyAction="http://tempuri.org/IAmigosServiceMgt/EnviarSolicitudResponse")]
        System.Threading.Tasks.Task<bool> EnviarSolicitudAsync(int idSolicita, int idRecibe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigosServiceMgt/ExisteSolicitudAmistad", ReplyAction="http://tempuri.org/IAmigosServiceMgt/ExisteSolicitudAmistadResponse")]
        bool ExisteSolicitudAmistad(int idSolicita, int idRecibe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigosServiceMgt/ExisteSolicitudAmistad", ReplyAction="http://tempuri.org/IAmigosServiceMgt/ExisteSolicitudAmistadResponse")]
        System.Threading.Tasks.Task<bool> ExisteSolicitudAmistadAsync(int idSolicita, int idRecibe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigosServiceMgt/EliminarAmigo", ReplyAction="http://tempuri.org/IAmigosServiceMgt/EliminarAmigoResponse")]
        bool EliminarAmigo(int idSolicita, int idRecibe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigosServiceMgt/EliminarAmigo", ReplyAction="http://tempuri.org/IAmigosServiceMgt/EliminarAmigoResponse")]
        System.Threading.Tasks.Task<bool> EliminarAmigoAsync(int idSolicita, int idRecibe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigosServiceMgt/AceptarSolicitud", ReplyAction="http://tempuri.org/IAmigosServiceMgt/AceptarSolicitudResponse")]
        bool AceptarSolicitud(int idSolicita, int idRecibe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmigosServiceMgt/AceptarSolicitud", ReplyAction="http://tempuri.org/IAmigosServiceMgt/AceptarSolicitudResponse")]
        System.Threading.Tasks.Task<bool> AceptarSolicitudAsync(int idSolicita, int idRecibe);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAmigosServiceMgtChannel : Cliente.ServidorBuscaminasServicio.IAmigosServiceMgt, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AmigosServiceMgtClient : System.ServiceModel.ClientBase<Cliente.ServidorBuscaminasServicio.IAmigosServiceMgt>, Cliente.ServidorBuscaminasServicio.IAmigosServiceMgt {
        
        public AmigosServiceMgtClient() {
        }
        
        public AmigosServiceMgtClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AmigosServiceMgtClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AmigosServiceMgtClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AmigosServiceMgtClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] ObtenerAmigosUsuario(int idJugador) {
            return base.Channel.ObtenerAmigosUsuario(idJugador);
        }
        
        public System.Threading.Tasks.Task<string[]> ObtenerAmigosUsuarioAsync(int idJugador) {
            return base.Channel.ObtenerAmigosUsuarioAsync(idJugador);
        }
        
        public System.Tuple<string, string>[] ObtenerEstadoAmigos(int idJugador) {
            return base.Channel.ObtenerEstadoAmigos(idJugador);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<string, string>[]> ObtenerEstadoAmigosAsync(int idJugador) {
            return base.Channel.ObtenerEstadoAmigosAsync(idJugador);
        }
        
        public string[] ObtenerSolicitudesUsuario(int idJugador) {
            return base.Channel.ObtenerSolicitudesUsuario(idJugador);
        }
        
        public System.Threading.Tasks.Task<string[]> ObtenerSolicitudesUsuarioAsync(int idJugador) {
            return base.Channel.ObtenerSolicitudesUsuarioAsync(idJugador);
        }
        
        public bool EnviarSolicitud(int idSolicita, int idRecibe) {
            return base.Channel.EnviarSolicitud(idSolicita, idRecibe);
        }
        
        public System.Threading.Tasks.Task<bool> EnviarSolicitudAsync(int idSolicita, int idRecibe) {
            return base.Channel.EnviarSolicitudAsync(idSolicita, idRecibe);
        }
        
        public bool ExisteSolicitudAmistad(int idSolicita, int idRecibe) {
            return base.Channel.ExisteSolicitudAmistad(idSolicita, idRecibe);
        }
        
        public System.Threading.Tasks.Task<bool> ExisteSolicitudAmistadAsync(int idSolicita, int idRecibe) {
            return base.Channel.ExisteSolicitudAmistadAsync(idSolicita, idRecibe);
        }
        
        public bool EliminarAmigo(int idSolicita, int idRecibe) {
            return base.Channel.EliminarAmigo(idSolicita, idRecibe);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarAmigoAsync(int idSolicita, int idRecibe) {
            return base.Channel.EliminarAmigoAsync(idSolicita, idRecibe);
        }
        
        public bool AceptarSolicitud(int idSolicita, int idRecibe) {
            return base.Channel.AceptarSolicitud(idSolicita, idRecibe);
        }
        
        public System.Threading.Tasks.Task<bool> AceptarSolicitudAsync(int idSolicita, int idRecibe) {
            return base.Channel.AceptarSolicitudAsync(idSolicita, idRecibe);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServidorBuscaminasServicio.ICuentaUsuarioServiceMgt")]
    public interface ICuentaUsuarioServiceMgt {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaUsuarioServiceMgt/GenerarCodigo", ReplyAction="http://tempuri.org/ICuentaUsuarioServiceMgt/GenerarCodigoResponse")]
        string GenerarCodigo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaUsuarioServiceMgt/GenerarCodigo", ReplyAction="http://tempuri.org/ICuentaUsuarioServiceMgt/GenerarCodigoResponse")]
        System.Threading.Tasks.Task<string> GenerarCodigoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaUsuarioServiceMgt/ComprobarCodigos", ReplyAction="http://tempuri.org/ICuentaUsuarioServiceMgt/ComprobarCodigosResponse")]
        bool ComprobarCodigos(string codigoCorreo, string codigoRecibido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaUsuarioServiceMgt/ComprobarCodigos", ReplyAction="http://tempuri.org/ICuentaUsuarioServiceMgt/ComprobarCodigosResponse")]
        System.Threading.Tasks.Task<bool> ComprobarCodigosAsync(string codigoCorreo, string codigoRecibido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaUsuarioServiceMgt/EnviarCorreo", ReplyAction="http://tempuri.org/ICuentaUsuarioServiceMgt/EnviarCorreoResponse")]
        bool EnviarCorreo(string correo, string asunto, string mensaje, string codigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaUsuarioServiceMgt/EnviarCorreo", ReplyAction="http://tempuri.org/ICuentaUsuarioServiceMgt/EnviarCorreoResponse")]
        System.Threading.Tasks.Task<bool> EnviarCorreoAsync(string correo, string asunto, string mensaje, string codigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaUsuarioServiceMgt/VerificarRegistroCuenta", ReplyAction="http://tempuri.org/ICuentaUsuarioServiceMgt/VerificarRegistroCuentaResponse")]
        bool VerificarRegistroCuenta(string nombreUsuario, string contrasenia, string correo, bool genero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaUsuarioServiceMgt/VerificarRegistroCuenta", ReplyAction="http://tempuri.org/ICuentaUsuarioServiceMgt/VerificarRegistroCuentaResponse")]
        System.Threading.Tasks.Task<bool> VerificarRegistroCuentaAsync(string nombreUsuario, string contrasenia, string correo, bool genero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaUsuarioServiceMgt/VerificarDisponibilidadCuenta", ReplyAction="http://tempuri.org/ICuentaUsuarioServiceMgt/VerificarDisponibilidadCuentaResponse" +
            "")]
        bool VerificarDisponibilidadCuenta(string usuario, string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaUsuarioServiceMgt/VerificarDisponibilidadCuenta", ReplyAction="http://tempuri.org/ICuentaUsuarioServiceMgt/VerificarDisponibilidadCuentaResponse" +
            "")]
        System.Threading.Tasks.Task<bool> VerificarDisponibilidadCuentaAsync(string usuario, string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaUsuarioServiceMgt/ValidarAuntentificacion", ReplyAction="http://tempuri.org/ICuentaUsuarioServiceMgt/ValidarAuntentificacionResponse")]
        bool ValidarAuntentificacion(string nombreUsuario, string contrasenia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaUsuarioServiceMgt/ValidarAuntentificacion", ReplyAction="http://tempuri.org/ICuentaUsuarioServiceMgt/ValidarAuntentificacionResponse")]
        System.Threading.Tasks.Task<bool> ValidarAuntentificacionAsync(string nombreUsuario, string contrasenia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaUsuarioServiceMgt/ComprobarEstado", ReplyAction="http://tempuri.org/ICuentaUsuarioServiceMgt/ComprobarEstadoResponse")]
        bool ComprobarEstado(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaUsuarioServiceMgt/ComprobarEstado", ReplyAction="http://tempuri.org/ICuentaUsuarioServiceMgt/ComprobarEstadoResponse")]
        System.Threading.Tasks.Task<bool> ComprobarEstadoAsync(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaUsuarioServiceMgt/ActualizarEstado", ReplyAction="http://tempuri.org/ICuentaUsuarioServiceMgt/ActualizarEstadoResponse")]
        bool ActualizarEstado(string nombreUsuario, int estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaUsuarioServiceMgt/ActualizarEstado", ReplyAction="http://tempuri.org/ICuentaUsuarioServiceMgt/ActualizarEstadoResponse")]
        System.Threading.Tasks.Task<bool> ActualizarEstadoAsync(string nombreUsuario, int estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaUsuarioServiceMgt/ObtenerIdJugador", ReplyAction="http://tempuri.org/ICuentaUsuarioServiceMgt/ObtenerIdJugadorResponse")]
        int ObtenerIdJugador(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaUsuarioServiceMgt/ObtenerIdJugador", ReplyAction="http://tempuri.org/ICuentaUsuarioServiceMgt/ObtenerIdJugadorResponse")]
        System.Threading.Tasks.Task<int> ObtenerIdJugadorAsync(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaUsuarioServiceMgt/ObtenerCorreoJugador", ReplyAction="http://tempuri.org/ICuentaUsuarioServiceMgt/ObtenerCorreoJugadorResponse")]
        string ObtenerCorreoJugador(string usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaUsuarioServiceMgt/ObtenerCorreoJugador", ReplyAction="http://tempuri.org/ICuentaUsuarioServiceMgt/ObtenerCorreoJugadorResponse")]
        System.Threading.Tasks.Task<string> ObtenerCorreoJugadorAsync(string usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaUsuarioServiceMgt/ObtenerNombreUsuario", ReplyAction="http://tempuri.org/ICuentaUsuarioServiceMgt/ObtenerNombreUsuarioResponse")]
        string ObtenerNombreUsuario(int idJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaUsuarioServiceMgt/ObtenerNombreUsuario", ReplyAction="http://tempuri.org/ICuentaUsuarioServiceMgt/ObtenerNombreUsuarioResponse")]
        System.Threading.Tasks.Task<string> ObtenerNombreUsuarioAsync(int idJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaUsuarioServiceMgt/ObtenerEstadoJugador", ReplyAction="http://tempuri.org/ICuentaUsuarioServiceMgt/ObtenerEstadoJugadorResponse")]
        int ObtenerEstadoJugador(int idJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaUsuarioServiceMgt/ObtenerEstadoJugador", ReplyAction="http://tempuri.org/ICuentaUsuarioServiceMgt/ObtenerEstadoJugadorResponse")]
        System.Threading.Tasks.Task<int> ObtenerEstadoJugadorAsync(int idJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaUsuarioServiceMgt/VerificarExisteciaJugador", ReplyAction="http://tempuri.org/ICuentaUsuarioServiceMgt/VerificarExisteciaJugadorResponse")]
        bool VerificarExisteciaJugador(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaUsuarioServiceMgt/VerificarExisteciaJugador", ReplyAction="http://tempuri.org/ICuentaUsuarioServiceMgt/VerificarExisteciaJugadorResponse")]
        System.Threading.Tasks.Task<bool> VerificarExisteciaJugadorAsync(string nombreUsuario);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICuentaUsuarioServiceMgtChannel : Cliente.ServidorBuscaminasServicio.ICuentaUsuarioServiceMgt, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CuentaUsuarioServiceMgtClient : System.ServiceModel.ClientBase<Cliente.ServidorBuscaminasServicio.ICuentaUsuarioServiceMgt>, Cliente.ServidorBuscaminasServicio.ICuentaUsuarioServiceMgt {
        
        public CuentaUsuarioServiceMgtClient() {
        }
        
        public CuentaUsuarioServiceMgtClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CuentaUsuarioServiceMgtClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CuentaUsuarioServiceMgtClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CuentaUsuarioServiceMgtClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GenerarCodigo() {
            return base.Channel.GenerarCodigo();
        }
        
        public System.Threading.Tasks.Task<string> GenerarCodigoAsync() {
            return base.Channel.GenerarCodigoAsync();
        }
        
        public bool ComprobarCodigos(string codigoCorreo, string codigoRecibido) {
            return base.Channel.ComprobarCodigos(codigoCorreo, codigoRecibido);
        }
        
        public System.Threading.Tasks.Task<bool> ComprobarCodigosAsync(string codigoCorreo, string codigoRecibido) {
            return base.Channel.ComprobarCodigosAsync(codigoCorreo, codigoRecibido);
        }
        
        public bool EnviarCorreo(string correo, string asunto, string mensaje, string codigo) {
            return base.Channel.EnviarCorreo(correo, asunto, mensaje, codigo);
        }
        
        public System.Threading.Tasks.Task<bool> EnviarCorreoAsync(string correo, string asunto, string mensaje, string codigo) {
            return base.Channel.EnviarCorreoAsync(correo, asunto, mensaje, codigo);
        }
        
        public bool VerificarRegistroCuenta(string nombreUsuario, string contrasenia, string correo, bool genero) {
            return base.Channel.VerificarRegistroCuenta(nombreUsuario, contrasenia, correo, genero);
        }
        
        public System.Threading.Tasks.Task<bool> VerificarRegistroCuentaAsync(string nombreUsuario, string contrasenia, string correo, bool genero) {
            return base.Channel.VerificarRegistroCuentaAsync(nombreUsuario, contrasenia, correo, genero);
        }
        
        public bool VerificarDisponibilidadCuenta(string usuario, string correo) {
            return base.Channel.VerificarDisponibilidadCuenta(usuario, correo);
        }
        
        public System.Threading.Tasks.Task<bool> VerificarDisponibilidadCuentaAsync(string usuario, string correo) {
            return base.Channel.VerificarDisponibilidadCuentaAsync(usuario, correo);
        }
        
        public bool ValidarAuntentificacion(string nombreUsuario, string contrasenia) {
            return base.Channel.ValidarAuntentificacion(nombreUsuario, contrasenia);
        }
        
        public System.Threading.Tasks.Task<bool> ValidarAuntentificacionAsync(string nombreUsuario, string contrasenia) {
            return base.Channel.ValidarAuntentificacionAsync(nombreUsuario, contrasenia);
        }
        
        public bool ComprobarEstado(string nombreUsuario) {
            return base.Channel.ComprobarEstado(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task<bool> ComprobarEstadoAsync(string nombreUsuario) {
            return base.Channel.ComprobarEstadoAsync(nombreUsuario);
        }
        
        public bool ActualizarEstado(string nombreUsuario, int estado) {
            return base.Channel.ActualizarEstado(nombreUsuario, estado);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarEstadoAsync(string nombreUsuario, int estado) {
            return base.Channel.ActualizarEstadoAsync(nombreUsuario, estado);
        }
        
        public int ObtenerIdJugador(string nombreUsuario) {
            return base.Channel.ObtenerIdJugador(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task<int> ObtenerIdJugadorAsync(string nombreUsuario) {
            return base.Channel.ObtenerIdJugadorAsync(nombreUsuario);
        }
        
        public string ObtenerCorreoJugador(string usuario) {
            return base.Channel.ObtenerCorreoJugador(usuario);
        }
        
        public System.Threading.Tasks.Task<string> ObtenerCorreoJugadorAsync(string usuario) {
            return base.Channel.ObtenerCorreoJugadorAsync(usuario);
        }
        
        public string ObtenerNombreUsuario(int idJugador) {
            return base.Channel.ObtenerNombreUsuario(idJugador);
        }
        
        public System.Threading.Tasks.Task<string> ObtenerNombreUsuarioAsync(int idJugador) {
            return base.Channel.ObtenerNombreUsuarioAsync(idJugador);
        }
        
        public int ObtenerEstadoJugador(int idJugador) {
            return base.Channel.ObtenerEstadoJugador(idJugador);
        }
        
        public System.Threading.Tasks.Task<int> ObtenerEstadoJugadorAsync(int idJugador) {
            return base.Channel.ObtenerEstadoJugadorAsync(idJugador);
        }
        
        public bool VerificarExisteciaJugador(string nombreUsuario) {
            return base.Channel.VerificarExisteciaJugador(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task<bool> VerificarExisteciaJugadorAsync(string nombreUsuario) {
            return base.Channel.VerificarExisteciaJugadorAsync(nombreUsuario);
        }
    }
}
